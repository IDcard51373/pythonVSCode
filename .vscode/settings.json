// Place your settings in this file to overwrite default and user settings.
{
    "files.exclude": {
        "out": true, // set this to true to hide the "out" folder with the compiled JS files
        "**/*.pyc": true,
        ".nyc_output": true,
        "obj": true,
        "bin": true,
        "**/__pycache__": true,
        "node_modules": false,
        ".vscode-test": true,
        "**/.mypy_cache/**": true,
        "**/.ropeproject/**": true
    },
    "search.exclude": {
        "out": true, // set this to false to include "out" folder in search results
        "coverage": true,
        "languageServer*/**": true
    },
    "typescript.tsdk": "./node_modules/typescript/lib", // we want to use the TS server from our node_modules folder to control its version
    "tslint.enable": true,
    "typescript.preferences.quoteStyle": "single",
    "javascript.preferences.quoteStyle": "single",
    "typescriptHero.imports.stringQuoteStyle": "'",
    "files.associations": {
        "testConfig.json": "jsonc"
    },
    "python.linting.enabled": false,
    "python.unitTest.promptToConfigure": false,
    "python.workspaceSymbols.enabled": false,
    "python.formatting.provider": "none",
    "python.terminal.activateEnvironment": false,
    "python.enableDevTools": true,
    "cucumberautocompletex.steps": ["src/smokeTest/out/steps/**/*.js", "src/smokeTest/src/steps/**/*.ts"],
    "cucumberautocomplete.steps": ["src/smokeTest/src/steps/**/*.ts"],
    "cucumberautocomplete.syncfeatures": "src/smokeTest/features/*feature",
    "cucumberautocomplete.strictGherkinCompletion": true,
    "cucumberautocomplete.onTypeFormat": true,
    "editor.quickSuggestions": {
        "comments": false,
        "strings": true,
        "other": true
    },
    "cucumberautocomplete.smartSnippets": true,
    "cucumberautocomplete.stepsInvariants": true,
    "cucumberautocomplete.customParameters": [
        {
            "parameter": "{ab}",
            "value": "(a|b)"
        }
    ],
    "cucumberautocomplete.gherkinDefinitionPart": "(Given|When|Then)\\("
}
